name: Release
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.version.outputs.version }}
      should_release: ${{ steps.version.outputs.hasNextVersion }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next version
        uses: thenativeweb/get-next-version@main
        id: version

      - name: Update package.json
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version --allow-same-version

      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update version to ${{ steps.version.outputs.version }}'
          tagging_message: 'v${{ steps.version.outputs.version }}'
  release:
    permissions:
      contents: write
      id-token: write
      pages: write
    needs: update-version
    if: needs.update-version.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
      - name: Create release tarball
        run: tar -czvf release.tar.gz -C dist .
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'release.tar.gz'
          name: 'Release v${{ needs.update-version.outputs.tag }}'
          tag: 'v${{ needs.update-version.outputs.tag }}'
      - uses: actions/upload-artifact@v4
        with:
          name: release
          path: ./dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: release

  package:
    runs-on: ubuntu-latest
    needs: [update-version, release]
    permissions:
      contents: read
      packages: write
    if: needs.update-version.outputs.should_release == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: release
          path: ./dist

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest
            ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{ needs.update-version.outputs.tag }}
